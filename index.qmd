---
title: "NBHF Clusters: Streamlined Results"
author: Jackson Vanfleet-Brown
date: 02/25/2024
editor: source
---

## Intro {.unnumbered}

We want to identify clusters within our training set before we make our classifier learn from it. There are two objectives for unsupervised clustering:

1. Look across species to identify whether species classes form separate clusters (@sec-species).
    - The existence of clusters suggests that there are meaningful differences between classes that the classifier can be trained to recognize.
2. Look within species classes to assess variability among events (@sec-events).
    -  The existence of clusters within an individual species class may indicate that there are outlying events with anomalous features that should be excluded from the training set.

```{r}
#| output: false

library(identidrift) # package with training data. On GitHub, "jackvfb/identidrift"
library(tidyverse)
library(vegan)
library(densityClust)
```
## Objective 1 {#sec-species}

### Method

```{r}
#| output: false
#| echo: true

set.seed(123)

# slice sample of 200 clicks from each species
samp <- nbhf_clicks %>% 
  group_by(species) %>%
  slice_sample(n=200) %>%
  ungroup()

samp_rm <- samp %>% 
  # drop metadata
  select(-c(UID:noiseLevel, BinaryFile, eventLabel,detectorName, db)) %>% 
  # drop variables to avoid creating artifacts in the cluster plot.
  select(species, eventId, duration:peak, Q_10dB:centerkHz_3dB)

# calculate Euclidean distances
dist <- samp_rm %>%
  select(-c(species, eventId)) %>%
  mutate(id = 1:n()) %>%
  column_to_rownames("id") %>%
  scale() %>%
  dist(method="euclidean")

cl <- densityClust(dist)
# set rho and delta values
cl <- findClusters(cl, rho=25, delta=2)
```
Using the above method, the density clustering algorithm formed the clusters shown in @fig-density-clust. The counts of each species in each of the resulting clusters is given in @tbl-clust-assn. The MDS plot is shown with the points colored by species in @fig-mds-species.

```{r}
#| label: fig-density-clust
#| fig-cap: "Density clusters with Four clusters formed with \u03c1=25 and \u03B4=2"

plotDensityClust(cl)
```

```{r}
#| label: tbl-clust-assn
#| tbl-cap: "Table of cluster assignments"

table(samp_rm$species, cl$clusters)
```

```{r}
#| label: fig-mds-species
#| warning: false
#| fig-cap: "MDS plot showing distances between clicks in the training set, colored by species"

mds <- as_tibble(cmdscale(dist))
mds <- cbind(mds, "species" = samp_rm$species)

ggplot(data = mds) +
  geom_point(aes(V1, V2, color = species)) +
  xlab("Dimension 1") +
  ylab("Dimension 2")
```


### Discussion

- For all species, we see that clicks cluster predominately in a single cluster, with little overlap between different species classes.
- The MDS plot similarly shows that clicks separate from one another on the basis of species class.
- From @tbl-clust-assn we see that cluster 3 is very small, containing just three Kogia clicks.
    - @tbl-clust-ks shows that the entirety of cluster 3 is formed from a few anomalous clicks in *Kogia* event identified as `PG2_02_09_CCES_023_Ksp - Copy.OE4`.
    - That same event, which happens to be the largest *Kogia* event in the entire training set, has the overwhelming majority of it's clicks in cluster 4.

```{r}
#| label: tbl-clust-ks
#| tbl-cap: "Table of cluster assignments for all *Kogia* events"
#| 
df <- data.frame("species" = samp_rm$species,
           "eventId" = samp_rm$eventId,
           "cluster" = cl$clusters) %>%
  filter(species=="ks")

table(df$eventId, df$cluster)
```

## Objective 2 {#sec-events}

We will now subset the training data by species and then re perform density clustering to identify anomalous events.

### Method

```{r}
#| echo: true
#| output: false

set.seed(123)

samp2 <- nbhf_clicks %>%
  nest(data=-species) %>%
  # determine the median event n for each species
  mutate(median_ev_n=map_dbl(data,\(d) d %>% count(eventId) %>% pull(n) %>% median())) %>%
  # for events with n greater than the median, slice a sample in size equal to the median
  # since n varies across two orders of magnitude, intended to balance representation in the plot
  mutate(samp=map2(data, median_ev_n, \(d, s) d %>% group_by(eventId) %>% slice_sample(n=s) %>% ungroup())) %>%
  # select variables of interest
  mutate(samp=map(samp, \(s) select(s, eventId, duration:peak, Q_10dB:centerkHz_3dB))) %>%
  mutate(samp=map(samp, \(s) s %>% mutate(id=1:n()) %>% drop_na())) %>%
  select(species, samp) %>% 
  unnest(samp)


sp <- c("ks", "pd", "pp")
# subset data by species
clicks <- lapply(sp, \(x) filter(samp2, species==x))
# create distance matrices.
dist2 <- lapply(clicks, \(c) c %>% select(-c(species, eventId)) %>% column_to_rownames("id") %>% scale() %>% dist())
cl2 <- lapply(dist2, densityClust)
# Perform density clustering. Static values chosen for rho and delta.
# This decision does not seem to be critical, because the algorithm strongly favors a single cluster for each species.
cl2 <- lapply(cl2, findClusters, delta = 8, rho = 5)
```

@fig-event-clusters shows the resulting density cluster plots and @fig-mds-events shows the plots with the points colored by event.

```{r}
#| label: fig-event-clusters
#| fig-cap: "Click clusters for each species class"
#| fig-subcap:
#|     - "*Kogia*"
#|     - "Dall's porpoise"
#|     - "Harbor porpoise"

plotDensityClust(cl2[[1]])
plotDensityClust(cl2[[2]])
plotDensityClust(cl2[[3]])
```

```{r}
#| label: fig-mds-events
#| fig-cap: "MDS plot showing distances between clicks, colored by event. Legend is hidden due to large number of events in each species class."
#| fig-subcap:
#|     - "*Kogia*"
#|     - "Dall's porpoise"
#|     - "Harbor porpoise"
#| 

mds2 <- lapply(dist2, function(x) {as_tibble(cmdscale(x))})
mds2 <- map2(mds2, clicks, function(x, y) {cbind(x, "eventId" = y$eventId)})

makePlot <- function(x) {
  ggplot(data = x) +
    geom_point(aes(V1, V2, color = eventId), show.legend = FALSE) +
    xlab("Dimension 1") +
    ylab("Dimension 2")
}

makePlot(mds2[[1]])
makePlot(mds2[[2]])
makePlot(mds2[[3]])
```

### Discussion

- The density clustering algorithm appears to strongly favors a single cluster in each species, suggesting that there are no outlying events.
- When points are colored by event, variation among events is more evident. This variation does not appear to be strong enough to manifest as more than one density-based cluster.